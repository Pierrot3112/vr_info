{"ast":null,"code":"var _jsxFileName = \"/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { AuthProvider, useAuth } from './app/context/AuthContext';\nimport Login from './app/screens/Login';\nimport Splash from './app/screens/Splash';\nimport Home from './app/screens/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxDEV(AuthProvider, {\n    children: _jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\nexport const Layout = () => {\n  const {\n    authState,\n    getRole,\n    setAuthState,\n    checkToken\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [userRole, setUserRole] = useState(null);\n  useEffect(() => {\n    const loadTokenAndRole = async () => {\n      try {\n        const token = await checkToken();\n        if (token) {\n          const role = await getRole(token);\n          setUserRole(role);\n          setAuthState({\n            token,\n            authenticated: true\n          });\n        } else {\n          setAuthState({\n            token: null,\n            authenticated: false\n          });\n        }\n      } catch (error) {\n        console.error(\"❌ Erreur lors du chargement du token ou du rôle :\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadTokenAndRole();\n  }, []);\n  const theme = Object.assign({}, DefaultTheme, {\n    colors: Object.assign({}, DefaultTheme.colors, {\n      primary: '#6200ee',\n      accent: '#03dac4'\n    })\n  });\n  if (isLoading) {\n    return _jsxDEV(Splash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return _jsxDEV(PaperProvider, {\n    theme: theme,\n    children: _jsxDEV(NavigationContainer, {\n      children: _jsxDEV(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: authState.authenticated ? userRole !== 'client' ? _jsxDEV(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this) : _jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this) : _jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["React","useEffect","useState","createNativeStackNavigator","NavigationContainer","Provider","PaperProvider","DefaultTheme","AuthProvider","useAuth","Login","Splash","Home","jsxDEV","_jsxDEV","Stack","App","children","Layout","fileName","_jsxFileName","lineNumber","columnNumber","authState","getRole","setAuthState","checkToken","isLoading","setIsLoading","userRole","setUserRole","loadTokenAndRole","token","role","authenticated","error","console","theme","Object","assign","colors","primary","accent","Navigator","screenOptions","headerShown","Screen","name","component"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport { AuthProvider, useAuth } from './app/context/AuthContext';\nimport Login from './app/screens/Login';\nimport Splash from './app/screens/Splash';\nimport Home from './app/screens/Home';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n    return (\n        <AuthProvider>\n            <Layout />\n        </AuthProvider>\n    );\n}\n\nexport const Layout = () => {\n    const { authState, getRole, setAuthState, checkToken } = useAuth();\n    const [isLoading, setIsLoading] = useState(true);\n    const [userRole, setUserRole] = useState<string | null>(null);\n\n    useEffect(() => {\n        const loadTokenAndRole = async () => {\n            try {\n                const token = await checkToken();\n                if (token) {\n                    const role = await getRole(token);\n                    setUserRole(role);\n                    setAuthState({ token, authenticated: true });\n                } else {\n                    setAuthState({ token: null, authenticated: false });\n                }\n            } catch (error) {\n                console.error(\"❌ Erreur lors du chargement du token ou du rôle :\", error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        loadTokenAndRole();\n    }, []);\n\n    const theme = {\n        ...DefaultTheme,\n        colors: {\n            ...DefaultTheme.colors,\n            primary: '#6200ee',\n            accent: '#03dac4',\n        },\n    };\n\n    if (isLoading) {\n        return <Splash />;\n    }\n\n    return (\n        <PaperProvider theme={theme}>\n            <NavigationContainer>\n                <Stack.Navigator screenOptions={{ headerShown: false }}>\n                    {authState.authenticated ? (\n                        userRole !== 'client' ? (\n                            <Stack.Screen name=\"Home\" component={Home} /> // Affichez Home si l'utilisateur est authentifié et que son rôle n'est pas 'client'\n                        ) : (\n                            <Stack.Screen name=\"Login\" component={Login} /> // Affichez Login si l'utilisateur est un client\n                        )\n                    ) : (\n                        <Stack.Screen name=\"Login\" component={Login} /> // Affichez Login si l'utilisateur n'est pas authentifié\n                    )}\n                </Stack.Navigator>\n            </NavigationContainer>\n        </PaperProvider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
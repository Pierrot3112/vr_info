{"ast":null,"code":"var _jsxFileName = \"/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/context/AuthContext.tsx\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from \"../../config/AxioConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_KEY = \"token\";\nconst AuthContext = createContext(undefined);\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth doit être utilisé dans un AuthProvider\");\n  }\n  return context;\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const [authState, setAuthState] = useState({\n    token: null,\n    authenticated: false\n  });\n  const checkToken = async () => {\n    return await AsyncStorage.getItem(TOKEN_KEY);\n  };\n  useEffect(() => {\n    const loadToken = async () => {\n      const token = await checkToken();\n      setAuthState({\n        token,\n        authenticated: !!token\n      });\n    };\n    loadToken();\n  }, []);\n  const login = async (num_tel, password) => {\n    try {\n      const response = await api.post(\"/token\", {\n        num_tel,\n        password\n      });\n      const token = response.data.access_token;\n      await AsyncStorage.setItem(TOKEN_KEY, token);\n      setAuthState({\n        token,\n        authenticated: true\n      });\n      return {\n        error: false,\n        msg: \"Connexion réussie\",\n        token\n      };\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion :\", error);\n      return {\n        error: true,\n        msg: error.response?.data?.msg || \"Échec de la connexion\"\n      };\n    }\n  };\n  const logout = async () => {\n    await AsyncStorage.removeItem(TOKEN_KEY);\n    setAuthState({\n      token: null,\n      authenticated: false\n    });\n  };\n  const getRole = async token => {\n    try {\n      const response = await api.get(\"/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data.role;\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération du rôle :\", error);\n      throw new Error(\"Impossible de récupérer le rôle\");\n    }\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      onLogin: login,\n      onLogout: logout,\n      checkToken,\n      getRole,\n      setAuthState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\nexport default AuthContext;","map":{"version":3,"names":["createContext","useContext","useEffect","useState","AsyncStorage","api","jsxDEV","_jsxDEV","TOKEN_KEY","AuthContext","undefined","useAuth","context","Error","AuthProvider","children","authState","setAuthState","token","authenticated","checkToken","getItem","loadToken","login","num_tel","password","response","post","data","access_token","setItem","error","msg","console","logout","removeItem","getRole","get","headers","Authorization","role","Provider","value","onLogin","onLogout","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from \"../../config/AxioConfig\";\n\nconst TOKEN_KEY = \"token\";\n\ninterface AuthState {\n    token: string | null;\n    authenticated: boolean;\n}\n\ninterface AuthContextProps {\n    authState: AuthState;\n    onLogin: (num_tel: string, password: string) => Promise<{ error?: boolean; msg?: string; token?: string }>;\n    onLogout: () => Promise<void>;\n    checkToken: () => Promise<string | null>;\n    getRole: (token: string) => Promise<string>;\n    setAuthState: (authState: AuthState) => void;\n}\n\nconst AuthContext = createContext<AuthContextProps | undefined>(undefined);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth doit être utilisé dans un AuthProvider\");\n    }\n    return context;\n};\n\ninterface AuthProviderProps {\n    children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n    const [authState, setAuthState] = useState<AuthState>({ token: null, authenticated: false });\n\n    const checkToken = async (): Promise<string | null> => {\n        return await AsyncStorage.getItem(TOKEN_KEY);\n    };\n\n    useEffect(() => {\n        const loadToken = async () => {\n            const token = await checkToken();\n            setAuthState({ token, authenticated: !!token });\n        };\n        loadToken();\n    }, []);\n\n    const login = async (num_tel: string, password: string) => {\n        try {\n            const response = await api.post(\"/token\", { num_tel, password });\n            const token = response.data.access_token;\n\n            await AsyncStorage.setItem(TOKEN_KEY, token);\n            setAuthState({ token, authenticated: true });\n\n            return { error: false, msg: \"Connexion réussie\", token };\n        } catch (error: any) {\n            console.error(\"Erreur lors de la connexion :\", error);\n            return { error: true, msg: error.response?.data?.msg || \"Échec de la connexion\" };\n        }\n    };\n\n    const logout = async () => {\n        await AsyncStorage.removeItem(TOKEN_KEY);\n        setAuthState({ token: null, authenticated: false });\n    };\n\n    const getRole = async (token: string): Promise<string> => {\n        try {\n            const response = await api.get(\"/me\", {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            return response.data.role;\n        } catch (error) {\n            console.error(\"Erreur lors de la récupération du rôle :\", error);\n            throw new Error(\"Impossible de récupérer le rôle\");\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ authState, onLogin: login, onLogout: logout, checkToken, getRole, setAuthState }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
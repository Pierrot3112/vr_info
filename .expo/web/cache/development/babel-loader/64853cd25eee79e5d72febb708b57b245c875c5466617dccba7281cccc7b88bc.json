{"ast":null,"code":"import axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport URL from \"../util/api.url\";\nimport NetInfo from '@react-native-community/netinfo';\nconst api = axios.create({\n  baseURL: URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst checkInternetConnection = async () => {\n  const state = await NetInfo.fetch();\n  return state.isConnected;\n};\napi.interceptors.request.use(async config => {\n  const isConnected = await checkInternetConnection();\n  if (!isConnected) {\n    throw new axios.Cancel('No internet connection');\n  }\n  try {\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (error) {\n    console.error(\"❌ Erreur lors de la récupération du token:\", error);\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  if (axios.isCancel(error)) {\n    console.error(\"❌ Requête annulée:\", error.message);\n  } else if (error.response) {\n    console.error(\"❌ Erreur API:\", error.response.data);\n  } else {\n    console.error(\"❌ Erreur réseau ou autre:\", error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","AsyncStorage","URL","NetInfo","api","create","baseURL","headers","checkInternetConnection","state","fetch","isConnected","interceptors","request","use","config","Cancel","token","getItem","Authorization","error","console","Promise","reject","response","isCancel","message","data"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/config/AxioConfig.tsx"],"sourcesContent":["import axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport URL from \"../util/api.url\";\nimport NetInfo from '@react-native-community/netinfo';\n\nconst api = axios.create({\n    baseURL: URL,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n});\n\n// Fonction pour vérifier la connexion Internet\nconst checkInternetConnection = async () => {\n    const state = await NetInfo.fetch();\n    return state.isConnected;\n};\n\n// Intercepteur pour ajouter le token Bearer à chaque requête\napi.interceptors.request.use(\n    async (config) => {\n        const isConnected = await checkInternetConnection();\n        if (!isConnected) {\n            throw new axios.Cancel('No internet connection');\n        }\n\n        try {\n            const token = await AsyncStorage.getItem(\"token\"); \n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n        } catch (error) {\n            console.error(\"❌ Erreur lors de la récupération du token:\", error);\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// Intercepteur pour gérer les erreurs globalement\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (axios.isCancel(error)) {\n            console.error(\"❌ Requête annulée:\", error.message);\n            // Vous pouvez afficher une notification à l'utilisateur ici\n        } else if (error.response) {\n            console.error(\"❌ Erreur API:\", error.response.data);\n        } else {\n            console.error(\"❌ Erreur réseau ou autre:\", error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,OAAO,MAAM,iCAAiC;AAErD,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACrBC,OAAO,EAAEJ,GAAG;EACZK,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAGF,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,KAAK,GAAG,MAAMN,OAAO,CAACO,KAAK,CAAC,CAAC;EACnC,OAAOD,KAAK,CAACE,WAAW;AAC5B,CAAC;AAGDP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACxB,MAAOC,MAAM,IAAK;EACd,MAAMJ,WAAW,GAAG,MAAMH,uBAAuB,CAAC,CAAC;EACnD,IAAI,CAACG,WAAW,EAAE;IACd,MAAM,IAAIX,KAAK,CAACgB,MAAM,CAAC,wBAAwB,CAAC;EACpD;EAEA,IAAI;IACA,MAAMC,KAAK,GAAG,MAAMhB,YAAY,CAACiB,OAAO,CAAC,OAAO,CAAC;IACjD,IAAID,KAAK,EAAE;MACPF,MAAM,CAACR,OAAO,CAACY,aAAa,GAAG,UAAUF,KAAK,EAAE;IACpD;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;EACtE;EACA,OAAOL,MAAM;AACjB,CAAC,EACAK,KAAK,IAAKE,OAAO,CAACC,MAAM,CAACH,KAAK,CACnC,CAAC;AAGDhB,GAAG,CAACQ,YAAY,CAACY,QAAQ,CAACV,GAAG,CACxBU,QAAQ,IAAKA,QAAQ,EACrBJ,KAAK,IAAK;EACP,IAAIpB,KAAK,CAACyB,QAAQ,CAACL,KAAK,CAAC,EAAE;IACvBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACM,OAAO,CAAC;EAEtD,CAAC,MAAM,IAAIN,KAAK,CAACI,QAAQ,EAAE;IACvBH,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACI,QAAQ,CAACG,IAAI,CAAC;EACvD,CAAC,MAAM;IACHN,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACM,OAAO,CAAC;EAC7D;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
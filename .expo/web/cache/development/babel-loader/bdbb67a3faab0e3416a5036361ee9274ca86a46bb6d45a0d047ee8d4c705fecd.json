{"ast":null,"code":"var _jsxFileName = \"/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/screens/Login.tsx\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from '../../styles/Login.style';\nimport useNetworkStatus from '../../components/NetworkStatus/NetworkStatus';\nimport Toast from 'react-native-toast-message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const [num_tel, setNumTel] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureText, setSecureText] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const {\n    onLogin,\n    authState,\n    getRole\n  } = useAuth();\n  const navigation = useNavigation();\n  const isOnline = useNetworkStatus();\n  const togglePasswordVisibility = () => setSecureText(!secureText);\n  const login = async () => {\n    if (!num_tel.trim() || !password.trim()) {\n      Toast.show({\n        type: 'error',\n        text1: 'Tous les champs sont obligatoires',\n        text2: 'Veuillez réessayer!'\n      });\n      return;\n    }\n    setLoading(true);\n    const result = await onLogin(num_tel, password);\n    setLoading(false);\n    if (result?.error) {\n      Toast.show({\n        type: 'error',\n        text1: 'Utilisateur inexistant ou mot de passe incorrect',\n        text2: 'Veuillez réessayer!'\n      });\n    } else {\n      try {\n        const role = await getRole(authState.token);\n        if (role !== 'client') {\n          navigation.navigate(\"Home\");\n          Toast.show({\n            type: 'success',\n            text1: 'Connexion réussie',\n            text2: ''\n          });\n        } else {\n          Alert.alert('Accès refusé, vous n');\n        }\n      } catch (error) {\n        console.error(\"❌ Erreur lors de la récupération du rôle :\", error);\n        Toast.show({\n          type: 'error',\n          text1: 'Erreur',\n          text2: \"Erreur lors de la récupération du rôle\"\n        });\n      }\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    children: _jsxDEV(KeyboardAvoidingView, {\n      style: styles.container,\n      children: [_jsxDEV(ImageBackground, {\n        source: require('../../assets/images/city.jpg'),\n        style: styles.head\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.formLogin,\n        children: [_jsxDEV(TextInput, {\n          style: styles.inputText,\n          placeholder: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n          onChangeText: setNumTel,\n          value: num_tel,\n          keyboardType: \"phone-pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.inputPassword,\n          children: [_jsxDEV(TextInput, {\n            style: styles.input,\n            placeholder: \"Mot de passe\",\n            secureTextEntry: secureText,\n            onChangeText: setPassword,\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: togglePasswordVisibility,\n            children: _jsxDEV(Ionicons, {\n              name: secureText ? \"eye-outline\" : \"eye-off-outline\",\n              size: 24,\n              color: \"gray\",\n              style: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.btnSubmit,\n          onPress: login,\n          disabled: loading,\n          children: _jsxDEV(Text, {\n            style: styles.btnSubmitText,\n            children: \"Se Connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), loading && _jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          style: {\n            marginTop: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\nexport default Login;","map":{"version":3,"names":["useState","View","TextInput","TouchableOpacity","SafeAreaView","ImageBackground","Text","ActivityIndicator","KeyboardAvoidingView","Alert","Ionicons","useAuth","useNavigation","styles","useNetworkStatus","Toast","jsxDEV","_jsxDEV","Login","num_tel","setNumTel","password","setPassword","secureText","setSecureText","loading","setLoading","onLogin","authState","getRole","navigation","isOnline","togglePasswordVisibility","login","trim","show","type","text1","text2","result","error","role","token","navigate","alert","console","children","style","container","source","require","head","fileName","_jsxFileName","lineNumber","columnNumber","formLogin","inputText","placeholder","onChangeText","value","keyboardType","inputPassword","input","secureTextEntry","onPress","name","size","color","icon","btnSubmit","disabled","btnSubmitText","marginTop"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/screens/Login.tsx"],"sourcesContent":["// Login.tsx\nimport { useState } from 'react';\nimport { View, TextInput, TouchableOpacity, SafeAreaView, ImageBackground, Text, ActivityIndicator, KeyboardAvoidingView, Alert } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from '../../styles/Login.style';\nimport useNetworkStatus from '../../components/NetworkStatus/NetworkStatus';\nimport Toast from 'react-native-toast-message';\n\nconst Login = () => {\n  const [num_tel, setNumTel] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureText, setSecureText] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const { onLogin, authState, getRole } = useAuth();\n  const navigation = useNavigation();\n  const isOnline = useNetworkStatus();\n\n  const togglePasswordVisibility = () => setSecureText(!secureText);\n\n  const login = async () => {\n    if (!num_tel.trim() || !password.trim()) {\n      Toast.show({\n        type: 'error',\n        text1: 'Tous les champs sont obligatoires',\n        text2: 'Veuillez réessayer!'\n      });\n      return;\n    }\n\n    setLoading(true);\n    const result = await onLogin(num_tel, password);\n    setLoading(false);\n\n    if (result?.error) {\n      Toast.show({\n        type: 'error',\n        text1: 'Utilisateur inexistant ou mot de passe incorrect',\n        text2: 'Veuillez réessayer!'\n      });\n    } else {\n      try {\n        const role = await getRole(authState.token);\n        if (role !== 'client') {\n          navigation.navigate(\"Home\");\n          Toast.show({\n            type: 'success',\n            text1: 'Connexion réussie',\n            text2: ''\n          });\n        } else {\n            Alert.alert('Accès refusé, vous n')\n        }\n      } catch (error) {\n        console.error(\"❌ Erreur lors de la récupération du rôle :\", error);\n        Toast.show({\n          type: 'error',\n          text1: 'Erreur',\n          text2: \"Erreur lors de la récupération du rôle\"\n        });\n      }\n    }\n  };\n\n  return (\n    <SafeAreaView>\n      <KeyboardAvoidingView style={styles.container}>\n        <ImageBackground source={require('../../assets/images/city.jpg')} style={styles.head} />\n        <View style={styles.formLogin}>\n          <TextInput\n            style={styles.inputText}\n            placeholder=\"Numéro de téléphone\"\n            onChangeText={setNumTel}\n            value={num_tel}\n            keyboardType=\"phone-pad\"\n          />\n          <View style={styles.inputPassword}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Mot de passe\"\n              secureTextEntry={secureText}\n              onChangeText={setPassword}\n              value={password}\n            />\n            <TouchableOpacity onPress={togglePasswordVisibility}>\n              <Ionicons name={secureText ? \"eye-outline\" : \"eye-off-outline\"} size={24} color=\"gray\" style={styles.icon} />\n            </TouchableOpacity>\n          </View>\n          <TouchableOpacity style={styles.btnSubmit} onPress={login} disabled={loading}>\n            <Text style={styles.btnSubmitText}>Se Connecter</Text>\n          </TouchableOpacity>\n          {loading && <ActivityIndicator size=\"large\" color=\"#0000ff\" style={{ marginTop: 10 }} />}\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/context/AuthContext.tsx\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from \"../../config/AxioConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_KEY = \"token\";\nconst AuthContext = createContext(undefined);\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth doit être utilisé dans un AuthProvider\");\n  }\n  return context;\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const [authState, setAuthState] = useState({\n    token: null,\n    authenticated: false\n  });\n  useEffect(() => {\n    const loadToken = async () => {\n      try {\n        const token = await checkToken();\n        if (token) {\n          setAuthState({\n            token,\n            authenticated: true\n          });\n        } else {\n          setAuthState({\n            token: null,\n            authenticated: false\n          });\n        }\n      } catch (error) {\n        console.error(\"❌ Erreur lors du chargement du token :\", error);\n      }\n    };\n    loadToken();\n  }, []);\n  const login = async (num_tel, password) => {\n    try {\n      const response = await api.post(\"/token\", {\n        num_tel,\n        password\n      });\n      const token = response.data.access_token;\n      await AsyncStorage.setItem(TOKEN_KEY, token);\n      setAuthState({\n        token,\n        authenticated: true\n      });\n      return {\n        error: false,\n        msg: \"Connexion réussie\"\n      };\n    } catch (error) {\n      return {\n        error: true,\n        msg: error.response?.data?.msg || \"Échec de la connexion\"\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await AsyncStorage.removeItem(TOKEN_KEY);\n      setAuthState({\n        token: null,\n        authenticated: false\n      });\n    } catch (error) {\n      console.error(\"❌ Erreur lors de la déconnexion :\", error);\n    }\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      onLogin: login,\n      onLogout: logout,\n      checkToken,\n      getRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\nexport const checkToken = async () => {\n  try {\n    const token = await AsyncStorage.getItem(TOKEN_KEY);\n    return token;\n  } catch (error) {\n    console.error(\"❌ Erreur lors de la vérification du token :\", error);\n    return null;\n  }\n};\nexport const getRole = async token => {\n  try {\n    const response = await api.get(\"/me\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.role;\n  } catch (error) {\n    console.error(\"❌ Erreur lors de la récupération du rôle :\", error);\n    return 'user';\n  }\n};","map":{"version":3,"names":["createContext","useContext","useEffect","useState","AsyncStorage","api","jsxDEV","_jsxDEV","TOKEN_KEY","AuthContext","undefined","useAuth","context","Error","AuthProvider","children","authState","setAuthState","token","authenticated","loadToken","checkToken","error","console","login","num_tel","password","response","post","data","access_token","setItem","msg","logout","removeItem","Provider","value","onLogin","onLogout","getRole","fileName","_jsxFileName","lineNumber","columnNumber","getItem","get","headers","Authorization","role"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from \"../../config/AxioConfig\";\n\nconst TOKEN_KEY = \"token\";\n\ninterface AuthState {\n    token: string | null;\n    authenticated: boolean;\n}\n\ninterface AuthContextProps {\n    authState: AuthState;\n    onLogin: (num_tel: string, password: string) => Promise<{ error?: boolean; msg?: string }>;\n    onLogout: () => void;\n    checkToken: () => Promise<string | null>;\n}\n\nconst AuthContext = createContext<AuthContextProps | undefined>(undefined);\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth doit être utilisé dans un AuthProvider\");\n    }\n    return context;\n};\n\ninterface AuthProviderProps {\n    children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n    const [authState, setAuthState] = useState<AuthState>({ token: null, authenticated: false });\n\n    useEffect(() => {\n        const loadToken = async () => {\n            try {\n                const token = await checkToken();\n                if (token) {\n                    setAuthState({ token, authenticated: true });\n                } else {\n                    setAuthState({ token: null, authenticated: false });\n                }\n            } catch (error) {\n                console.error(\"❌ Erreur lors du chargement du token :\", error);\n            }\n        };\n        loadToken();\n    }, []);\n\n    const login = async (num_tel: string, password: string) => {\n        try {\n            const response = await api.post(\"/token\", { num_tel, password });\n            const token = response.data.access_token;\n\n            await AsyncStorage.setItem(TOKEN_KEY, token);\n\n            setAuthState({ token, authenticated: true });\n\n            return { error: false, msg: \"Connexion réussie\" };\n        } catch (error) {\n            return { error: true, msg: error.response?.data?.msg || \"Échec de la connexion\" };\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await AsyncStorage.removeItem(TOKEN_KEY);\n            setAuthState({ token: null, authenticated: false });\n        } catch (error) {\n            console.error(\"❌ Erreur lors de la déconnexion :\", error);\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ authState, onLogin: login, onLogout: logout, checkToken, getRole }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const checkToken = async (): Promise<string | null> => {\n    try {\n        const token = await AsyncStorage.getItem(TOKEN_KEY);\n        return token;\n    } catch (error) {\n        console.error(\"❌ Erreur lors de la vérification du token :\", error);\n        return null;\n    }\n};\n\nexport const getRole = async (token: string): Promise<string> => {\n    try {\n        const response = await api.get(\"/me\", {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        });\n        return response.data.role;\n    } catch (error) {\n        console.error(\"❌ Erreur lors de la récupération du rôle :\", error);\n        return 'user';\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/components/UpdateSegment.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Toast from 'react-native-toast-message';\nimport api from '../config/AxioConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateSegment = ({\n  selectedSegment,\n  onClose\n}) => {\n  const [selectedValue, setSelectedValue] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const items = [{\n    label: 'Moins de 50m',\n    value: '50'\n  }, {\n    label: '50 - 150m',\n    value: '150'\n  }, {\n    label: '150 - 300m',\n    value: '300'\n  }, {\n    label: '300 - 500m',\n    value: '500'\n  }, {\n    label: 'Plus de 500m',\n    value: '0'\n  }];\n  const handleSave = async () => {\n    if (!selectedSegment) {\n      console.log(\"No segment selected\");\n      Toast.show({\n        type: 'error',\n        text1: 'Erreur',\n        text2: 'Aucun segment sélectionné.'\n      });\n      return;\n    }\n    if (!selectedValue) {\n      console.log(\"No value selected for length\");\n      Toast.show({\n        type: 'error',\n        text1: 'Erreur',\n        text2: 'Veuillez sélectionner une longueur d\\'embouteillage.'\n      });\n      return;\n    }\n    if (!description) {\n      console.log(\"No description added\");\n      Toast.show({\n        type: 'error',\n        text1: 'Erreur',\n        text2: 'Veuillez ajouter une description.'\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await api.post('/informations', {\n        connection_id: selectedSegment.segment_id,\n        longueur_embouteillage: parseInt(selectedValue, 10),\n        description\n      });\n      if (response.status === 201) {\n        console.log(\"Success response received\");\n        Toast.show({\n          type: 'success',\n          text1: 'Succès',\n          text2: 'Les données ont été enregistrées avec succès.'\n        });\n      } else {\n        console.log(\"Error in saving data\");\n        Toast.show({\n          type: 'error',\n          text1: 'Erreur',\n          text2: 'Une erreur est survenue lors de l\\'enregistrement.'\n        });\n      }\n    } catch (error) {\n      console.log(\"Error during API call\", error);\n      Toast.show({\n        type: 'error',\n        text1: 'Erreur',\n        text2: `Détails: ${JSON.stringify(error.response?.data || error.message)}`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.modalContainer,\n    children: _jsxDEV(View, {\n      style: styles.modalContent,\n      children: [selectedSegment && _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Text, {\n          children: selectedSegment.point_depart_nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), _jsxDEV(Text, {\n          children: selectedSegment.point_arrivee_nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), loading ? _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this) : _jsxDEV(View, {\n        style: styles.bottomBtn,\n        children: [_jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: onClose,\n          children: _jsxDEV(Text, {\n            style: styles.closeButtonText,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.saveButton,\n          onPress: handleSave,\n          children: _jsxDEV(Text, {\n            style: styles.submitButtonText,\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  modalContainer: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContent: {\n    width: '100%',\n    padding: 20,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n  },\n  button: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: '#2196F3',\n    borderRadius: 30,\n    alignItems: 'center',\n    width: '48%'\n  },\n  closeButtonText: {\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  saveButton: {\n    marginTop: 10,\n    padding: 15,\n    backgroundColor: '#2196F3',\n    borderRadius: 30,\n    alignItems: 'center',\n    width: '48%'\n  },\n  bottomBtn: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  submitButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default UpdateSegment;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","ActivityIndicator","Toast","api","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateSegment","selectedSegment","onClose","selectedValue","setSelectedValue","description","setDescription","loading","setLoading","items","label","value","handleSave","console","log","show","type","text1","text2","response","post","connection_id","segment_id","longueur_embouteillage","parseInt","status","error","JSON","stringify","data","message","style","styles","modalContainer","children","modalContent","point_depart_nom","fileName","_jsxFileName","lineNumber","columnNumber","point_arrivee_nom","size","color","bottomBtn","button","onPress","closeButtonText","saveButton","submitButtonText","create","position","bottom","width","flex","justifyContent","alignItems","padding","backgroundColor","borderTopLeftRadius","borderTopRightRadius","marginTop","borderRadius","fontWeight","flexDirection"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/components/UpdateSegment.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport api from '../config/AxioConfig'; // Ensure this is correctly imported\n\nconst UpdateSegment: React.FC<UpdateSegmentProps> = ({ selectedSegment, onClose }) => {\n    const [selectedValue, setSelectedValue] = useState('');\n    const [description, setDescription] = useState('');\n    const [loading, setLoading] = useState(false); // Loader state\n\n    const items = [\n        { label: 'Moins de 50m', value: '50' },\n        { label: '50 - 150m', value: '150' },\n        { label: '150 - 300m', value: '300' },\n        { label: '300 - 500m', value: '500' },\n        { label: 'Plus de 500m', value: '0' },\n    ];\n\n    const handleSave = async () => {\n        if (!selectedSegment) {\n            console.log(\"No segment selected\");\n            Toast.show({\n                type: 'error',\n                text1: 'Erreur',\n                text2: 'Aucun segment sélectionné.',\n            });\n            return;\n        }\n\n        if (!selectedValue) {\n            console.log(\"No value selected for length\");\n            Toast.show({\n                type: 'error',\n                text1: 'Erreur',\n                text2: 'Veuillez sélectionner une longueur d\\'embouteillage.',\n            });\n            return;\n        }\n\n        if (!description) {\n            console.log(\"No description added\");\n            Toast.show({\n                type: 'error',\n                text1: 'Erreur',\n                text2: 'Veuillez ajouter une description.',\n            });\n            return;\n        }\n\n        setLoading(true); // Show loader before starting the API call\n\n        try {\n            const response = await api.post('/informations', { \n                connection_id: selectedSegment.segment_id,\n                longueur_embouteillage: parseInt(selectedValue, 10),\n                description\n            });\n\n            if (response.status === 201) {\n                console.log(\"Success response received\");\n                Toast.show({\n                    type: 'success',\n                    text1: 'Succès',\n                    text2: 'Les données ont été enregistrées avec succès.',\n                });\n            } else {\n                console.log(\"Error in saving data\");\n                Toast.show({\n                    type: 'error',\n                    text1: 'Erreur',\n                    text2: 'Une erreur est survenue lors de l\\'enregistrement.',\n                });\n            }\n        } catch (error: any) {\n            console.log(\"Error during API call\", error);\n            Toast.show({\n                type: 'error',\n                text1: 'Erreur',\n                text2: `Détails: ${JSON.stringify(error.response?.data || error.message)}`,\n            });\n        } finally {\n            setLoading(false); // Hide loader after API call is complete\n        }\n    };\n\n    return (\n        <View style={styles.modalContainer}>\n            <View style={styles.modalContent}>\n                {selectedSegment && (\n                    <>\n                        <Text>{selectedSegment.point_depart_nom}</Text>\n                        <Text>{selectedSegment.point_arrivee_nom}</Text>\n                        {/* Your Picker and Input components here */}\n                    </>\n                )}\n\n                {/* Show loader if the request is in progress */}\n                {loading ? (\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n                ) : (\n                    <View style={styles.bottomBtn}>\n                        <TouchableOpacity\n                            style={styles.button}\n                            onPress={onClose}\n                        >\n                            <Text style={styles.closeButtonText}>Fermer</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                            style={styles.saveButton}\n                            onPress={handleSave}\n                        >\n                            <Text style={styles.submitButtonText}>Enregistrer</Text>\n                        </TouchableOpacity>\n                    </View>\n                )}\n            </View>\n        </View>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    modalContainer: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modalContent: {\n        width: '100%',\n        padding: 20,\n        backgroundColor: 'white',\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n    },\n    button: {\n        marginTop: 10,\n        padding: 10,\n        backgroundColor: '#2196F3',\n        borderRadius: 30,\n        alignItems: 'center',\n        width: '48%',\n    },\n    closeButtonText: {\n        color: 'black',\n        fontWeight: 'bold',\n    },\n    saveButton: {\n        marginTop: 10,\n        padding: 15,\n        backgroundColor: '#2196F3',\n        borderRadius: 30,\n        alignItems: 'center',\n        width: '48%',\n    },\n    bottomBtn: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        marginTop: 20,\n    },\n    submitButtonText: {\n        color: 'white',\n        fontWeight: 'bold',\n    },\n});\n\nexport default UpdateSegment;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
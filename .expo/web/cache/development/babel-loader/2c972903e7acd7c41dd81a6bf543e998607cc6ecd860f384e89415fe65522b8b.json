{"ast":null,"code":"var _jsxFileName = \"/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/screens/Login.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\nimport Toast from 'react-native-toast-message';\nimport styles from '../../styles/Login.style';\nimport useNetworkStatus from '../../components/NetworkStatus/NetworkStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const [num_tel, setNumTel] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureText, setSecureText] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const {\n    onLogin\n  } = useAuth();\n  const navigation = useNavigation();\n  const isOnline = useNetworkStatus();\n  const togglePasswordVisibility = () => setSecureText(!secureText);\n  const login = async () => {\n    if (!isOnline) {\n      Toast.show({\n        type: 'error',\n        text1: 'Pas de connexion internet',\n        text2: 'Veuillez vérifier votre connexion et réessayer.'\n      });\n      return;\n    }\n    if (!num_tel.trim() || !password.trim()) {\n      Toast.show({\n        type: 'error',\n        text1: 'Champs obligatoires',\n        text2: 'Tous les champs sont obligatoires.'\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      const result = await onLogin(num_tel.trim(), password);\n      if (result?.error) {\n        Toast.show({\n          type: 'error',\n          text1: 'Erreur',\n          text2: \"Une erreur inattendue s'est produite.\"\n        });\n        console.log('====================================');\n        console.log(r);\n        console.log('====================================');\n      } else {\n        navigation.navigate('Home');\n      }\n    } catch (error) {\n      Toast.show({\n        type: 'error',\n        text1: 'Erreur',\n        text2: \"Une erreur inattendue s'est produite.\"\n      });\n      console.error('Erreur lors de la connexion :', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxDEV(KeyboardAvoidingView, {\n      style: {\n        flex: 1\n      },\n      behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n      children: _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(ImageBackground, {\n          source: require('../../assets/images/city.jpg'),\n          style: styles.head\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.formLogin,\n          children: [_jsxDEV(TextInput, {\n            style: styles.inputText,\n            placeholder: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n            onChangeText: setNumTel,\n            value: num_tel,\n            keyboardType: \"phone-pad\",\n            autoCapitalize: \"none\",\n            autoCorrect: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.inputPassword,\n            children: [_jsxDEV(TextInput, {\n              style: styles.input,\n              placeholder: \"Mot de passe\",\n              secureTextEntry: secureText,\n              onChangeText: setPassword,\n              value: password,\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: togglePasswordVisibility,\n              accessible: true,\n              accessibilityLabel: \"Afficher/Masquer le mot de passe\",\n              children: _jsxDEV(Ionicons, {\n                name: secureText ? 'eye-outline' : 'eye-off-outline',\n                size: 24,\n                color: \"gray\",\n                style: styles.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.btnSubmit,\n            onPress: login,\n            disabled: loading,\n            children: _jsxDEV(Text, {\n              style: styles.btnSubmitText,\n              children: \"Se Connecter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), loading && _jsxDEV(ActivityIndicator, {\n            size: \"large\",\n            color: \"#0000ff\",\n            style: {\n              marginTop: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\nexport default Login;","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","SafeAreaView","ImageBackground","Text","ActivityIndicator","KeyboardAvoidingView","Platform","Ionicons","useAuth","useNavigation","Toast","styles","useNetworkStatus","jsxDEV","_jsxDEV","Login","num_tel","setNumTel","password","setPassword","secureText","setSecureText","loading","setLoading","onLogin","navigation","isOnline","togglePasswordVisibility","login","show","type","text1","text2","trim","result","error","console","log","r","navigate","style","flex","children","behavior","OS","undefined","container","source","require","head","fileName","_jsxFileName","lineNumber","columnNumber","formLogin","inputText","placeholder","onChangeText","value","keyboardType","autoCapitalize","autoCorrect","inputPassword","input","secureTextEntry","onPress","accessible","accessibilityLabel","name","size","color","icon","btnSubmit","disabled","btnSubmitText","marginTop"],"sources":["/media/pierrot-3112/08DE3CDADE3CC22C/dev/Mobile/VoieRapide/app/screens/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity, SafeAreaView, ImageBackground, Text, ActivityIndicator, KeyboardAvoidingView, Platform } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\nimport Toast from 'react-native-toast-message';\nimport styles from '../../styles/Login.style';\nimport useNetworkStatus from '../../components/NetworkStatus/NetworkStatus';\n\nconst Login = () => {\n  const [num_tel, setNumTel] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureText, setSecureText] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const { onLogin } = useAuth();\n  const navigation = useNavigation();\n  const isOnline = useNetworkStatus();\n\n  const togglePasswordVisibility = () => setSecureText(!secureText);\n\n  const login = async () => {\n    // Vérifier la connectivité réseau\n    if (!isOnline) {\n      Toast.show({\n        type: 'error',\n        text1: 'Pas de connexion internet',\n        text2: 'Veuillez vérifier votre connexion et réessayer.',\n      });\n      return;\n    }\n\n    // Vérifier que tous les champs sont remplis (en supprimant les espaces inutiles)\n    if (!num_tel.trim() || !password.trim()) {\n      Toast.show({\n        type: 'error',\n        text1: 'Champs obligatoires',\n        text2: 'Tous les champs sont obligatoires.',\n      });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const result = await onLogin(num_tel.trim(), password);\n      if (result?.error) {\n        // Affichage du message générique en cas d'erreur sur le numéro ou le mot de passe\n        Toast.show({\n          type: 'error',\n          text1: 'Erreur',\n          text2: \"Une erreur inattendue s'est produite.\",\n        });\n        console.log('====================================');\n        console.log(r);\n        console.log('====================================');\n      } else {\n        navigation.navigate('Home');\n      }\n    } catch (error) {\n      Toast.show({\n        type: 'error',\n        text1: 'Erreur',\n        text2: \"Une erreur inattendue s'est produite.\",\n      });\n      console.error('Erreur lors de la connexion :', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <KeyboardAvoidingView style={{ flex: 1 }} behavior={Platform.OS === 'ios' ? 'padding' : undefined}>\n        <View style={styles.container}>\n          <ImageBackground source={require('../../assets/images/city.jpg')} style={styles.head} />\n          <View style={styles.formLogin}>\n            <TextInput\n              style={styles.inputText}\n              placeholder=\"Numéro de téléphone\"\n              onChangeText={setNumTel}\n              value={num_tel}\n              keyboardType=\"phone-pad\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n            />\n            <View style={styles.inputPassword}>\n              <TextInput\n                style={styles.input}\n                placeholder=\"Mot de passe\"\n                secureTextEntry={secureText}\n                onChangeText={setPassword}\n                value={password}\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n              />\n              <TouchableOpacity onPress={togglePasswordVisibility} accessible accessibilityLabel=\"Afficher/Masquer le mot de passe\">\n                <Ionicons name={secureText ? 'eye-outline' : 'eye-off-outline'} size={24} color=\"gray\" style={styles.icon} />\n              </TouchableOpacity>\n            </View>\n            <TouchableOpacity style={styles.btnSubmit} onPress={login} disabled={loading}>\n              <Text style={styles.btnSubmitText}>Se Connecter</Text>\n            </TouchableOpacity>\n            {loading && <ActivityIndicator size=\"large\" color=\"#0000ff\" style={{ marginTop: 10 }} />}\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}